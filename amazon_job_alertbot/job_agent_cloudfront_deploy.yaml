AWSTemplateFormatVersion: '2010-09-09'

Description: >
  CloudFormation template for automated deployment of Job alert agent.
  Creates a deployment role, lambda functions, a Step Function state machine, and necessary IAM roles and policies. Deletes role after creation.

Parameters:
  BaseNameParameter:
    Type: String
    Description: Base name for resources
    Default: job-agent
  BaseNameTitleCase:
    Type: String
    Description: Base name for resources using title case
    Default: JobAgent
  TagKey:
    Type: String
    Description: Common tag key for resources
    Default: JobAlertsAgent
  StateMachineVersion:
    Type: String
    Description: State machine version number
    Default: 1.0

Resources:

  JobAgentLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${BaseName}-log-group'
      RetentionInDays: 14
      Tags:
        - Key: !Ref TagKey
          Value: !Sub '${BaseName}-logs'

  JobAgentLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub '${BaseNameTitleCase}LogPolicy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt JobLogGroup.Arn
            Tags:
              - Key: !Ref TagKey
                Value: !Sub '${BaseName}-log-policy'
      Tags:
        - Key: !Ref TagKey
          Value: !Sub '${BaseName}-log-role'

  JobAgentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !GetAtt JobAgentBucket.BucketName
      LifecycleConfiguration:
        Rules:
          - Id: StoreAllInS3OneZoneIA
            Status: Enabled
            Transitions:
              - TransitionInDays: 0
                StorageClass: ONEZONE_IA
      Tags:
        - Key: !Ref TagKey
          Value: !Sub '${BaseName}-bucket'

    JobAgentStoreTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id_icims
            AttributeType: S
          - AttributeName: last_updated
            AttributeType: S
          - AttributeName: last_scrape
            AttributeType: S
          - AttributeName: posted_date
            AttributeType: S
          - AttributeName: date_off_market
            AttributeType: S
        BillingMode: PROVISIONED
        ContributorInsightsSpecification:
          Enabled: true
        DeletionProtectionEnabled: true
        GlobalSecondaryIndexes:
          - IndexName: last_scrape-index
            ContributorInsightsSpecification:
              Enabled: true
            KeySchema:
              - AttributeName: last_scrape
                KeyType: HASH
              - AttributeName: id_icims
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
          - IndexName: date_off_market-index
            ContributorInsightsSpecification:
              Enabled: true
            KeySchema:
              - AttributeName: id_icims
                KeyType: HASH
              - AttributeName: date_off_market
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
        KeySchema:
          - AttributeName: id_icims
            KeyType: HASH
          - AttributeName: last_updated
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: posted_date-index
            KeySchema:
              - AttributeName: id_icims
                KeyType: HASH
              - AttributeName: posted_date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: !Sub '${BaseName}-store'
        TableClass: STANDARD_INFREQUENT_ACCESS
        SSESpecification:
          SSEEnabled: false
        Tags:
          - Key: !Ref TagKey
            Value: job_db_store
          - Key: !Ref TagKey
            Value: !Sub '${BaseName}-agent-bucket'
      VersioningConfiguration:
        Status: 'Enabled'

  RequestsLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: requests-layer
      Description: Layer containing the Python requests library
      Content:
        S3Bucket: !GetAtt JobAgentBucket.BucketName
        S3Key: requests_layer.zip
      CompatibleRuntimes:
        - python3.11
      Tags:
        - Key: !Ref TagKey
          Value: !Sub '${BaseName}-scraper-requests-layer'

  VarReplacerFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub '${BaseName}-var-replacer'
        Handler: var_replacer.handler
        Role: !GetAtt '${BaseNameTitleCase}LogRole.Arn'
        Runtime: python3.11
        Code:
          S3Bucket: !GetAtt JobAgentBucket.BucketName
          S3Key: var_replacer.zip
        Tags:
          - Key: !Ref TagKey
            Value: !Ref FunctionName

    JobAgentScraperFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub '${BaseName}-job-scraper'
        Handler: job_scraper.handler
        Role: !GetAtt '${BaseNameTitleCase}LogRole.Arn'
        Runtime: python3.11
        Code:
          S3Bucket: !GetAtt JobAgentBucket.BucketName
          S3Key: job_scraper.zip
        Layers:
          - !Ref RequestsLayer
        Tags:
          - Key: !Ref TagKey
            Value: !Ref FunctionName

    JobAgentStoreFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub '${BaseName}-job-store'
        Handler: job_store.handler
        Role: !GetAtt '${BaseNameTitleCase}StoreRole.Arn'
        Runtime: python3.11
        Code:
          S3Bucket: !GetAtt JobAgentBucket.BucketName
          S3Key: job_store.zip
        Tags:
          - Key: !Ref TagKey
            Value: !Ref FunctionName

    JobAgentSenderFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub '${BaseName}-job-sender'
        Handler: job_sender.handler
        Role: !GetAtt '${BaseNameTitleCase}SenderRole.Arn'
        Runtime: python3.11
        Code:
          S3Bucket: !GetAtt JobAgentBucket.BucketName
          S3Key: job_sender.zip
        Tags:
          - Key: !Ref TagKey
            Value: !Ref FunctionName

    ErrorHandlerFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub '${BaseName}-error-handler'
        Handler: error_handler.handler
        Role: !GetAtt '${BaseNameTitleCase}LogRole.Arn'
        Runtime: python3.11
        Code:
          S3Bucket: !GetAtt JobAgentBucket.BucketName
          S3Key: error_handler.zip
        Tags:
          - Key: !Ref TagKey
            Value: !Ref FunctionName

    JobAgentStoreTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id_icims
            AttributeType: S
          - AttributeName: last_updated
            AttributeType: S
          - AttributeName: last_scrape
            AttributeType: S
          - AttributeName: posted_date
            AttributeType: S
          - AttributeName: date_off_market
            AttributeType: S
        BillingMode: PROVISIONED
        ContributorInsightsSpecification:
          Enabled: true
        DeletionProtectionEnabled: true
        GlobalSecondaryIndexes:
          - IndexName: last_scrape-index
            ContributorInsightsSpecification:
              Enabled: true
            KeySchema:
              - AttributeName: last_scrape
                KeyType: HASH
              - AttributeName: id_icims
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
          - IndexName: date_off_market-index
            ContributorInsightsSpecification:
              Enabled: true
            KeySchema:
              - AttributeName: id_icims
                KeyType: HASH
              - AttributeName: date_off_market
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
        KeySchema:
          - AttributeName: id_icims
            KeyType: HASH
          - AttributeName: last_updated
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: posted_date-index
            KeySchema:
              - AttributeName: id_icims
                KeyType: HASH
              - AttributeName: posted_date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: !Sub '${BaseName}-store'
        TableClass: STANDARD_INFREQUENT_ACCESS
        SSESpecification:
          SSEEnabled: false
        Tags:
          - Key: !Ref TagKey
            Value: job_db_store

    JobAgentStateMachine:
      Type: AWS::StepFunctions::StateMachine
      Properties:
        StateMachineName: !Sub '${BaseName}-StateMachine'
        RoleArn: !GetAtt StateMachineExecutionRole.Arn
        DefinitionS3Location:
          Bucket: !GetAtt JobAgentBucket.BucketName
          Key: !Sub '${BaseName}-state-machine-definition.json'
          Version: !Ref StateMachineVersion
        DefinitionSubstitution:
          JobAgentScraperFunctionArn: !GetAtt JobAgentScraperFunction.Arn
          JobAgentScraperFunctionName: !GetAtt JobAgentScraperFunction.FunctionName
          JobAgentStoreFunctionArn: !GetAtt JobAgentStoreFunction.Arn
          JobAgentStoreFunctionName: !GetAtt JobAgentStoreFunction.FunctionName
          JobAgentSenderFunctionArn: !GetAtt JobAgentSenderFunction.Arn
          JobAgentSenderFunctionName: !GetAtt JobAgentSenderFunction.FunctionName
          JobAgentStoreTableName: !GetAtt JobAgentStoreTable.TableName
          JobAgentStoreTableArn: !GetAtt JobAgentStoreTable.Arn
          ErrorHandlerFunctionName: !GetAtt ErrorHandlerFunction.FunctionName
          ErrorHandlerFunctionArn: !GetAtt ErrorHandlerFunction.Arn
          VarReplacerFunctionName: !GetAtt VarReplacerFunction.FunctionName
          VarReplacerFunctionArn: !GetAtt VarReplacerFunction.Arn
          JobQueueUrl: !Sub "https://sqs.${AWS::Region}${AZ}.amazonaws.com/${UserId}/${BaseName}-queue-${AWS::AccountId}.fifo/"
        StateMachineType: STANDARD
      Tags:
        - Key: !Ref TagKey
          Value: !Ref StateMachineName

    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: !Sub '${BaseName}-queue-${AWS::AccountId}.fifo'
        ContentBasedDuplication: true
        FifoQueue: true
        MessageRetentionPeriod: 160000
        VisibilityTimeout: 400
        Tags:
          - Key: !Ref TagKey
            Value: !Ref QueueName

    JobQueueInlinePolicy:
      Type: AWS::SQS::QueueInlinePolicy
      Queue: !Ref JobQueue
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt JobQueue.Arn
            Principal:
              Service: cloudwatch.amazonaws.com
              AWS: !Sub '${AccountID}'
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt JobAgentStateMachine.Arn'
          - Effect: Allow
            Action:
              - sqs.ReceiveMessage
              - sqs.DeleteMessage
              - sqs.GetQueueAttributes
              - sqs.PurgeQueue
            Resource: !GetAtt JobQueue.Arn
            Principal:
              Service: cloudwatch.amazonaws.com
              AWS: !Sub '${AccountID}'
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt JobAgentSenderFunction.Arn'
      Tags:
        - Key: !Ref TagKey
          Value: !Sub '${BaseName}-queue-policy'

    JobSubscriberTopic:
      Type: AWS::SNS::Topic
      Properties:
        Tags:
          - Key: !Ref TagKey
            Value: !Sub '${BaseName}-subscriber-topic'

    JobAgentTriggerEvent:
      Type: AWS::CloudBridge::Event
      Properties:
        # CloudBridge configuration

Outputs:
